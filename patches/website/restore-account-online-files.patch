diff --git a/package-lock.json b/package-lock.json
index 6064145..967788c 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -14,6 +14,7 @@
 				"@node-saml/node-saml": "^5.0.0",
 				"@pretendonetwork/error-codes": "^1.0.3",
 				"@pretendonetwork/grpc": "^2.2.3",
+				"adm-zip": "^0.5.9",
 				"browserify": "^17.0.0",
 				"colors": "^1.4.0",
 				"cookie-parser": "^1.4.5",
@@ -33,7 +34,8 @@
 				"morgan": "^1.10.0",
 				"nice-grpc": "^2.1.13",
 				"nodemailer": "^6.7.5",
-				"stripe": "^9.9.0"
+				"stripe": "^9.9.0",
+				"uuid": "^8.3.2"
 			},
 			"devDependencies": {
 				"@pretendonetwork/eslint-config": "^0.0.6",
@@ -2779,6 +2781,15 @@
 				"node": ">=0.4.0"
 			}
 		},
+		"node_modules/adm-zip": {
+			"version": "0.5.16",
+			"resolved": "https://registry.npmjs.org/adm-zip/-/adm-zip-0.5.16.tgz",
+			"integrity": "sha512-TGw5yVi4saajsSEgz25grObGHEUaDrniwvA2qwSC060KfqGPdglhvPMA2lPIoxs3PQIItj2iag35fONcQqgUaQ==",
+			"license": "MIT",
+			"engines": {
+				"node": ">=12.0"
+			}
+		},
 		"node_modules/ajv": {
 			"version": "6.12.6",
 			"resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
@@ -10840,6 +10851,11 @@
 			"resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-7.2.0.tgz",
 			"integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA=="
 		},
+		"adm-zip": {
+			"version": "0.5.16",
+			"resolved": "https://registry.npmjs.org/adm-zip/-/adm-zip-0.5.16.tgz",
+			"integrity": "sha512-TGw5yVi4saajsSEgz25grObGHEUaDrniwvA2qwSC060KfqGPdglhvPMA2lPIoxs3PQIItj2iag35fONcQqgUaQ=="
+		},
 		"ajv": {
 			"version": "6.12.6",
 			"resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
diff --git a/package.json b/package.json
index e15d68f..6488835 100644
--- a/package.json
+++ b/package.json
@@ -28,6 +28,7 @@
 		"@node-saml/node-saml": "^5.0.0",
 		"@pretendonetwork/error-codes": "^1.0.3",
 		"@pretendonetwork/grpc": "^2.2.3",
+		"adm-zip": "^0.5.9",
 		"browserify": "^17.0.0",
 		"colors": "^1.4.0",
 		"cookie-parser": "^1.4.5",
@@ -47,7 +48,8 @@
 		"morgan": "^1.10.0",
 		"nice-grpc": "^2.1.13",
 		"nodemailer": "^6.7.5",
-		"stripe": "^9.9.0"
+		"stripe": "^9.9.0",
+		"uuid": "^8.3.2"
 	},
 	"devDependencies": {
 		"@pretendonetwork/eslint-config": "^0.0.6",
diff --git a/public/assets/js/account.js b/public/assets/js/account.js
index d946fcf..02ed1eb 100644
--- a/public/assets/js/account.js
+++ b/public/assets/js/account.js
@@ -1,3 +1,8 @@
+const onlineFilesModal = document.querySelector('.modal-wrapper#onlinefiles');
+const onlineFilesModalButtonConfirm = document.getElementById('onlineFilesConfirmButton');
+const onlineFilesModalButtonClose = document.getElementById('onlineFilesCloseButton');
+const onlineFilesModalPasswordInput = document.getElementById('password');
+
 const updateServerEnvironmentForm = document.querySelector('form.server-selection');
 const serverSelectionSaveButton = document.querySelector('#save-server-selection');
 const editSettingsModal = document.querySelector('.modal-wrapper#edit-settings');
@@ -7,6 +12,40 @@ const deletePNIDConfirmModal = document.querySelector('.modal-wrapper#confirm-de
 const deletePNIDConfirmModalButtonConfirm = document.getElementById('confirmDeleteConfirmButton');
 const deletePNIDConfirmModalButtonClose = document.getElementById('confirmDeleteCloseButton');
 
+document.getElementById('download-cemu-files')?.addEventListener('click', (event) => {
+	event.preventDefault();
+
+	onlineFilesModal.classList.remove('hidden');
+});
+
+onlineFilesModalButtonConfirm?.addEventListener('click', () => {
+	fetch('/account/online-files', {
+		method: 'POST',
+		headers: {
+			'Accept': 'application/json',
+			'Content-Type': 'application/json'
+		},
+		body: JSON.stringify({
+			password: onlineFilesModalPasswordInput.value
+		})
+	})
+		.then(response => response.blob())
+		.then(blob => URL.createObjectURL(blob))
+		.then((blobUrl) => {
+			const a = document.createElement('a');
+			a.href = blobUrl;
+			a.setAttribute('download', 'Cemu Pretendo Online Files.zip');
+			a.click();
+
+			onlineFilesModal.classList.add('hidden');
+		})
+		.catch(console.log);
+});
+
+onlineFilesModalButtonClose?.addEventListener('click', () => {
+	onlineFilesModal.classList.add('hidden');
+});
+
 editSettingsModalButtonClose?.addEventListener('click', () => {
 	editSettingsModal.classList.add('hidden');
 });
diff --git a/src/routes/account.js b/src/routes/account.js
index afd97d1..650be4c 100644
--- a/src/routes/account.js
+++ b/src/routes/account.js
@@ -1,6 +1,8 @@
 const crypto = require('crypto');
 const express = require('express');
 const DiscordOauth2 = require('discord-oauth2');
+const { v4: uuidv4 } = require('uuid');
+const AdmZip = require('adm-zip');
 const Stripe = require('stripe');
 const { REST: DiscordRest } = require('@discordjs/rest');
 const { Routes: DiscordRoutes } = require('discord-api-types/v10');
@@ -279,6 +281,47 @@ router.get('/remove/discord', requireLoginMiddleware, async (request, response)
 	}
 });
 
+router.post('/online-files', requireLoginMiddleware, async (request, response) => {
+	const { account } = request;
+	const { password } = request.body;
+
+	const hashedPassword = util.nintendoPasswordHash(password, account.pid);
+
+	const miiNameBuffer = Buffer.alloc(0x16);
+	const miiName = Buffer.from(account.mii.name, 'utf16le').swap16();
+	miiName.copy(miiNameBuffer);
+
+	let accountDat = 'AccountInstance_00000000\n';
+	accountDat += 'PersistentId=80000001\n';
+	accountDat += 'TransferableIdBase=0\n';
+	accountDat += `Uuid=${uuidv4().replace(/-/g, '')}\n`;
+	accountDat += `MiiData=${Buffer.from(account.mii.data, 'base64').toString('hex')}\n`;
+	accountDat += `MiiName=${miiNameBuffer.toString('hex')}\n`;
+	accountDat += `AccountId=${account.username}\n`;
+	accountDat += 'BirthYear=0\n';
+	accountDat += 'BirthMonth=0\n';
+	accountDat += 'BirthDay=0\n';
+	accountDat += 'Gender=0\n';
+	accountDat += `EmailAddress=${account.email.address}\n`;
+	accountDat += 'Country=0\n';
+	accountDat += 'SimpleAddressId=0\n';
+	accountDat += `PrincipalId=${account.pid.toString(16)}\n`;
+	accountDat += 'IsPasswordCacheEnabled=1\n';
+	accountDat += `AccountPasswordCache=${hashedPassword}`;
+
+	const onlineFiles = new AdmZip();
+
+	onlineFiles.addFile('mlc01/usr/save/system/act/80000001/account.dat', Buffer.from(accountDat)); // Minimal account.dat
+	onlineFiles.addFile('otp.bin', Buffer.alloc(0x400)); // nulled OTP
+	onlineFiles.addFile('seeprom.bin', Buffer.alloc(0x200)); // nulled SEEPROM
+
+	response.status(200);
+	response.set('Content-Disposition', 'attachment; filename="Cemu Pretendo Online Files.zip');
+	response.set('Content-Type', 'application/zip');
+
+	response.end(onlineFiles.toBuffer());
+});
+
 router.get('/miieditor', requireLoginMiddleware, async (request, response) => {
 	const { account } = request;
 
diff --git a/views/account/account.handlebars b/views/account/account.handlebars
index 5de959d..0d18202 100644
--- a/views/account/account.handlebars
+++ b/views/account/account.handlebars
@@ -25,6 +25,12 @@
 				{{/if}}
 			</div>
 			<div class="buttons">
+				<a class="button secondary" id="download-cemu-files" href="/account/online-files" download>
+					<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-download"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
+					<p class="caption">{{ locale.account.settings.downloadFiles }}</p>
+					<p class="cemu-warning">{{ locale.account.settings.downloadFilesDescription }}</p>
+				</a>
+
 				<a class="button secondary" id="account-upgrade" href="/account/upgrade">
 					<p class="caption">{{ locale.account.settings.upgrade }}</p>
 				</a>
@@ -191,6 +197,18 @@
 </div>
 {{/if}}
 
+<div class="modal-wrapper hidden" id="onlinefiles">
+	<div class="modal">
+		<h1 class="title dot">{{ locale.account.settings.settingCards.password }}</h1>
+		<p class="modal-caption">{{ locale.account.settings.settingCards.passwordPrompt }}</p>
+		<input name="password" id="password" type="password" required />
+		<div class="modal-button-wrapper">
+			<button class="button cancel" id="onlineFilesCloseButton">{{ locale.modals.cancel }}</button>
+			<button class="button primary confirm" id="onlineFilesConfirmButton">{{ locale.modals.confirm }}</button>
+		</div>
+	</div>
+</div>
+
 <div class="modal-wrapper hidden" id="edit-settings">
 	<div class="modal">
 		<h1 class="title dot">{{ locale.account.settings.unavailable }}</h1>
