diff --git a/src/routes/account.js b/src/routes/account.js
index afd97d1..5328632 100644
--- a/src/routes/account.js
+++ b/src/routes/account.js
@@ -17,21 +17,11 @@ const config = require('../config');
 
 const { Router } = express;
 
-const stripe = new Stripe(config.stripe.secret_key);
 const router = new Router();
-const discordRest = new DiscordRest({ version: '10' }).setToken(config.discord.bot_token);
 
 const gRPCApiChannel = createChannel(`${config.grpc.api.host}:${config.grpc.api.port}`);
 const gRPCApiClient = createClient(ApiServiceDefinition, gRPCApiChannel);
 
-// Create OAuth client
-const discordOAuth = new DiscordOauth2({
-	clientId: config.discord.client_id,
-	clientSecret: config.discord.client_secret,
-	redirectUri: `${config.http.base_url}/account/connect/discord`,
-	version: 'v10'
-});
-
 router.get('/', requireLoginMiddleware, async (request, response) => {
 	// Setup the data to be sent to the handlebars renderer
 	const renderData = {};
@@ -54,6 +44,9 @@ router.get('/', requireLoginMiddleware, async (request, response) => {
 	renderData.account = account;
 	renderData.isTester = account.access_level > 0;
 
+	response.render('account/account', renderData);
+	return;
+
 	// Check if a Discord account is linked to the PNID
 	if (account.connections.discord.id && account.connections.discord.id.trim() !== '') {
 		try {
@@ -207,6 +200,7 @@ router.get('/reset-password', async (request, response) => {
 });
 
 router.get('/connect/discord', requireLoginMiddleware, async (request, response) => {
+	return response.redirect('/account');
 	const { pnid } = request;
 	let tokens;
 	try {
@@ -251,6 +245,7 @@ router.get('/connect/discord', requireLoginMiddleware, async (request, response)
 });
 
 router.get('/remove/discord', requireLoginMiddleware, async (request, response) => {
+	return response.redirect('/account');
 	const { account, pnid } = request;
 
 	try {
@@ -289,6 +284,7 @@ router.get('/miieditor', requireLoginMiddleware, async (request, response) => {
 });
 
 router.get('/upgrade', requireLoginMiddleware, async (request, response) => {
+	return response.redirect('/account');
 	// Set user account info to render data
 	const { pnid } = request;
 
@@ -330,6 +326,7 @@ router.get('/upgrade', requireLoginMiddleware, async (request, response) => {
 });
 
 router.post('/stripe/checkout/:priceId', requireLoginMiddleware, async (request, response) => {
+	return response.redirect('/account');
 	// Set user account info to render data
 	const { account } = request;
 	const pid = account.pid;
@@ -391,6 +388,7 @@ router.post('/stripe/checkout/:priceId', requireLoginMiddleware, async (request,
 });
 
 router.post('/stripe/unsubscribe', requireLoginMiddleware, async (request, response) => {
+	return response.redirect('/account');
 	// Set user account info to render data
 	const { pnid } = request;
 
@@ -430,6 +428,7 @@ router.post('/stripe/unsubscribe', requireLoginMiddleware, async (request, respo
 });
 
 router.post('/stripe/webhook', async (request, response) => {
+	return response.redirect('/account');
 	const stripeSignature = request.headers['stripe-signature'];
 	let event;
 
